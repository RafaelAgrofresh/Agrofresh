# Generated by Django 3.1.2 on 2020-10-09 16:46

from django.db import migrations
from historical import models

def create_or_replace(model):
    if not hasattr(model, 'create_or_replace'):
        raise TypeError(
            f"{model.__name__} create_or_replace"
        )
    def create_or_replace_model(apps, schema_editor):
        model.create_or_replace()
    return create_or_replace_model

def drop(model):
    if not hasattr(model, 'drop'):
        raise TypeError(
            f"{model.__name__} drop"
        )
    def drop_model(apps, schema_editor):
        model.drop()
    return drop_model

class Migration(migrations.Migration):

    dependencies = [
        ('historical', '0006_define_retention_policies'),
    ]

    operations = [
        migrations.RunPython(
            create_or_replace(models.FloatDataDownsampled),
            reverse_code=drop(models.FloatDataDownsampled)),

        migrations.RunPython(
            create_or_replace(models.IntegerDataDownsampled),
            reverse_code=drop(models.IntegerDataDownsampled)),
    ]
